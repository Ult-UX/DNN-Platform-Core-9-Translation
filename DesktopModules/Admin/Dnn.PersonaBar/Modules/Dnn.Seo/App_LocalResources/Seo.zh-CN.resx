<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="nav_Seo.Text" xml:space="preserve">
    <value>S E O</value>
  </data>
  <data name="URLManagementTab.Text" xml:space="preserve">
    <value>URL 管理</value>
  </data>
  <data name="GeneralSettingsTab.Text" xml:space="preserve">
    <value>一般设置</value>
  </data>
  <data name="ExtensionUrlProvidersTab.Text" xml:space="preserve">
    <value>扩展 URL 提供程序</value>
  </data>
  <data name="ExpressionsTab.Text" xml:space="preserve">
    <value>表达式</value>
  </data>
  <data name="TestURLTab.Text" xml:space="preserve">
    <value>测试 URL</value>
  </data>
  <data name="SitemapSettingsTab.Text" xml:space="preserve">
    <value>站点地图设置</value>
  </data>
  <data name="minusCharacter.Text" xml:space="preserve">
    <value>"-" e.g. page-name</value>
  </data>
  <data name="underscoreCharacter.Text" xml:space="preserve">
    <value>"_" e.g. page_name</value>
  </data>
  <data name="Do301RedirectToPortalHome.Text" xml:space="preserve">
    <value>站点首页</value>
  </data>
  <data name="Do404Error.Text" xml:space="preserve">
    <value>404 错误</value>
  </data>
  <data name="ReplacementCharacter.Text" xml:space="preserve">
    <value>标准替换字符</value>
  </data>
  <data name="ReplacementCharacter.Help" xml:space="preserve">
    <value>标准替换字符</value>
  </data>
  <data name="enableSystemGeneratedUrlsLabel.Text" xml:space="preserve">
    <value>连结页面 URL</value>
  </data>
  <data name="enableSystemGeneratedUrlsLabel.Help" xml:space="preserve">
    <value>您可以配置系统将如何生成URL。</value>
  </data>
  <data name="enableLowerCaseLabel.Help" xml:space="preserve">
    <value>选中此框可强制将URL转换为小写。</value>
  </data>
  <data name="enableLowerCaseLabel.Text" xml:space="preserve">
    <value>将网址转换为小写</value>
  </data>
  <data name="autoAsciiConvertLabel.Help" xml:space="preserve">
    <value>选中时，任何带有重音的(变音符号)字符（如å和è）都将转换为与它们的plain-ascii等效。示例:å-&gt;a和è-&gt;e。</value>
  </data>
  <data name="autoAsciiConvertLabel.Text" xml:space="preserve">
    <value>转换重音字符</value>
  </data>
  <data name="setDefaultSiteLanguageLabel.Help" xml:space="preserve">
    <value>选中时，如果找不到其他语言，则此网站的默认语言将始终设置在重写的网址中。</value>
  </data>
  <data name="setDefaultSiteLanguageLabel.Text" xml:space="preserve">
    <value>设置默认网站语言</value>
  </data>
  <data name="UrlRewriter.Text" xml:space="preserve">
    <value>URL 重写</value>
  </data>
  <data name="UrlRedirects.Text" xml:space="preserve">
    <value>URL 重定向</value>
  </data>
  <data name="plDeletedPages.Help" xml:space="preserve">
    <value>选择用户浏览到已删除，已过期或已禁用页面时应发生的行为。</value>
  </data>
  <data name="plDeletedPages.Text" xml:space="preserve">
    <value>将已删除，已过期，禁用的网页重定向到</value>
  </data>
  <data name="enable301RedirectsLabel.Help" xml:space="preserve">
    <value>如果您希望将旧的"不友好的"网址重新定向到新网址，请选中此框。</value>
  </data>
  <data name="enable301RedirectsLabel.Text" xml:space="preserve">
    <value>重定向至友好 URL</value>
  </data>
  <data name="redirectOnWrongCaseLabel.Help" xml:space="preserve">
    <value>选中时，任何非小写的URL都将被重定向到该URL的小写版本。</value>
  </data>
  <data name="redirectOnWrongCaseLabel.Text" xml:space="preserve">
    <value>重定向混合大小写网址</value>
  </data>
  <data name="GlobalSetting.Text" xml:space="preserve">
    <value>这是一个全球性的设置。此设置的更改将影响您的所有网站。</value>
  </data>
  <data name="ignoreRegExLabel.Help" xml:space="preserve">
    <value>忽略URL正则表达式模式用于通过URL重写模块停止处理URL。当有问题的URL不需要重写，重定向或以其他方式通过URL重写器进行处理时，应使用该选项。示例包括图像，css文件，pdf文件，服务请求以及与DotNetNuke无关的资源请求。</value>
  </data>
  <data name="ignoreRegExLabel.Text" xml:space="preserve">
    <value>忽略 URL 正则表达式</value>
  </data>
  <data name="ignoreRegExInvalidPattern.Text" xml:space="preserve">
    <value>忽略URL正则表达式无效</value>
  </data>
  <data name="RegularExpressions.Text" xml:space="preserve">
    <value>正则表达式</value>
  </data>
  <data name="ExtensionUrlProviders.Text" xml:space="preserve">
    <value>扩展 URL 提供程序</value>
  </data>
  <data name="SettingsUpdateSuccess.Text" xml:space="preserve">
    <value>设置已更新。</value>
  </data>
  <data name="SettingsError.Text" xml:space="preserve">
    <value>无法更新设置。请稍后再试。</value>
  </data>
  <data name="SettingsRestoreWarning.Text" xml:space="preserve">
    <value>您确定要取消更改吗？</value>
  </data>
  <data name="Yes.Text" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="No.Text" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="doNotRewriteRegExLabel.Help" xml:space="preserve">
    <value>不重写URL正则表达式会停止任何匹配的URL上的URL重写。当URL被解释为DotNetNuke页面时使用此值，但不应该是。</value>
  </data>
  <data name="doNotRewriteRegExLabel.Text" xml:space="preserve">
    <value>不要重写URL正则表达式</value>
  </data>
  <data name="doNotRewriteRegExInvalidPattern.Text" xml:space="preserve">
    <value>不要重写URL正则表达式无效</value>
  </data>
  <data name="siteUrlsOnlyRegExInvalidPattern.Text" xml:space="preserve">
    <value>网站网址只有正则表达式无效</value>
  </data>
  <data name="siteUrlsOnlyRegExLabel.Help" xml:space="preserve">
    <value>网站URL只有正则表达式模式才能更改匹配URL的处理顺序。匹配时，URL将根据siteURLs.config文件中的任何正则表达式进行评估，而不首先根据站点的友好URL列表进行检查。使用此模式强制通过siteURLs.config文件处理位于该文件中的显式URL重写或重定向。</value>
  </data>
  <data name="siteUrlsOnlyRegExLabel.Text" xml:space="preserve">
    <value>网站网址只有正则表达式</value>
  </data>
  <data name="doNotRedirectUrlRegExInvalidPattern.Text" xml:space="preserve">
    <value>不要重定向URL正则表达式无效</value>
  </data>
  <data name="doNotRedirectUrlRegExLabel.Help" xml:space="preserve">
    <value>不重定向URL正则表达式模式可防止在所有情况下重定向匹配URL。当URL被错误地重定向时使用这种模式。</value>
  </data>
  <data name="doNotRedirectUrlRegExLabel.Text" xml:space="preserve">
    <value>不要重定向URL正则表达式</value>
  </data>
  <data name="doNotRedirectHttpsUrlRegExInvalidPattern.Text" xml:space="preserve">
    <value>不重定向Https URL正则表达式无效</value>
  </data>
  <data name="doNotRedirectHttpsUrlRegExLabel.Help" xml:space="preserve">
    <value>不重定向https URL正则表达式用于阻止http和https URL之间不需要的重定向。它可以防止任何匹配URL的重定向，并且可以处理http-&gt; https和https-&gt; http重定向。</value>
  </data>
  <data name="doNotRedirectHttpsUrlRegExLabel.Text" xml:space="preserve">
    <value>不要重定向Https URL正则表达式</value>
  </data>
  <data name="preventLowerCaseUrlRegExLabel.Help" xml:space="preserve">
    <value>对于任何匹配的URL，阻止小写URL正则表达式会停止自动转换为小写。使用此模式可防止任何需要保持混合/大写格式的URL的小写转换。这通常用于停止URL内容包含编码字符或区分大小写值的URL转换。</value>
  </data>
  <data name="preventLowerCaseUrlRegExLabel.Text" xml:space="preserve">
    <value>防止小写URL正则表达式</value>
  </data>
  <data name="preventLowerCaseUrlRegExInvalidPattern.Text" xml:space="preserve">
    <value>防止小写URL正则表达式无效</value>
  </data>
  <data name="doNotUseFriendlyUrlsRegExLabel.Help" xml:space="preserve">
    <value>不使用友好URL正则表达式模式用于强制某些DotNetNuke页面使用更长的URL作为页面。这通常用于生成向后兼容的行为。</value>
  </data>
  <data name="doNotUseFriendlyUrlsRegExLabel.Text" xml:space="preserve">
    <value>不要使用友好的URL正则表达式</value>
  </data>
  <data name="doNotUseFriendlyUrlsRegExInvalidPattern.Text" xml:space="preserve">
    <value>不要使用友好的URL正则表达式无效</value>
  </data>
  <data name="keepInQueryStringRegExInvalidPattern.Text" xml:space="preserve">
    <value>保持查询字符串正则表达式无效</value>
  </data>
  <data name="keepInQueryStringRegExLabel.Help" xml:space="preserve">
    <value>Keep in Querystring正则表达式允许匹配部分友好的URL路径并确保它保留在查询字符串中。当生成/ pagename / key / value的DotNetNuke URL时，/ key / value中的'Keep in Querystring Regular Expression'模式将与路径的该部分相匹配，并将其作为生成的URL的查询字符串的一部分;例如/页面名？键=值。</value>
  </data>
  <data name="keepInQueryStringRegExLabel.Text" xml:space="preserve">
    <value>保持Querystring正则表达式</value>
  </data>
  <data name="urlsWithNoExtensionRegExLabel.Help" xml:space="preserve">
    <value>没有扩展正则表达式模式的URL用于验证不引用服务器资源的URL，不是DotNetNuke页面，但可以请求不带URL扩展名。当找不到匹配的DotNetNuke页面时，与此正则表达式匹配的URL将不会被视为404。</value>
  </data>
  <data name="urlsWithNoExtensionRegExLabel.Text" xml:space="preserve">
    <value>没有扩展正则表达式的URL</value>
  </data>
  <data name="urlsWithNoExtensionRegExInvalidPattern.Text" xml:space="preserve">
    <value>没有扩展正则表达式的URL无效</value>
  </data>
  <data name="validFriendlyUrlRegExLabel.Help" xml:space="preserve">
    <value>此模式用于确定构成页面名称或URL段的字符是否对形成友好的URL路径有效。不匹配模式的字符将从页面名称中删除</value>
  </data>
  <data name="validFriendlyUrlRegExLabel.Text" xml:space="preserve">
    <value>有效的友好URL正则表达式</value>
  </data>
  <data name="validFriendlyUrlRegExInvalidPattern.Text" xml:space="preserve">
    <value>有效的友好URL正则表达式无效</value>
  </data>
  <data name="TestPageUrl.Text" xml:space="preserve">
    <value>测试一个页面的 URL</value>
  </data>
  <data name="TestUrlRewriting.Text" xml:space="preserve">
    <value>测试 URL 重写</value>
  </data>
  <data name="selectPageToTestLabel.Help" xml:space="preserve">
    <value>选择此网站的页面以测试URL生成。您可以使用“搜索”框来过滤页面列表。</value>
  </data>
  <data name="selectPageToTestLabel.Text" xml:space="preserve">
    <value>测试页面</value>
  </data>
  <data name="NoneSpecified.Text" xml:space="preserve">
    <value>没有制定</value>
  </data>
  <data name="None.Text" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="queryStringLabel.Help" xml:space="preserve">
    <value>要生成包含路径中额外信息的URL，请以查询字符串的形式添加路径信息。例如，输入＆key = value会将生成的URL更改为URL路径中的include / key / value。使用此功能测试由第三方URL生成的示例URL。</value>
  </data>
  <data name="queryStringLabel.Text" xml:space="preserve">
    <value>添加查询字符串(可选)</value>
  </data>
  <data name="pageNameLabel.Help" xml:space="preserve">
    <value>一些模块通过明确定义URL的最后部分来生成友好的URL。如果是这种情况，请输入生成URL时使用的'pagename'值的值。如果您没有明确的价值，或者不知道何时使用此值，请将该值留空。</value>
  </data>
  <data name="pageNameLabel.Text" xml:space="preserve">
    <value>自定义页面名称/网址结束字符串(可选)</value>
  </data>
  <data name="resultingUrlsLabel.Text" xml:space="preserve">
    <value>结果网址</value>
  </data>
  <data name="resultingUrlsLabel.Help" xml:space="preserve">
    <value>显示可以从选定页面生成的URL列表，具体取决于别名和/或语言。</value>
  </data>
  <data name="TestUrlButtonCaption.Text" xml:space="preserve">
    <value>测试 URL</value>
  </data>
  <data name="testUrlRewritingButton.Text" xml:space="preserve">
    <value>测试URL重写</value>
  </data>
  <data name="testUrlRewritingLabel.Text" xml:space="preserve">
    <value>要测试的网址</value>
  </data>
  <data name="testUrlRewritingLabel.Help" xml:space="preserve">
    <value>在此框中输入包含http ://或https :// )的标准网址(，以测试URL重写/重定向。</value>
  </data>
  <data name="rewritingResultLabel.Help" xml:space="preserve">
    <value>以DNN平台和第三方扩展可以看到的原始格式显示重写的URL。</value>
  </data>
  <data name="rewritingResultLabel.Text" xml:space="preserve">
    <value>重写结果</value>
  </data>
  <data name="languageLabel.Help" xml:space="preserve">
    <value>显示在URL重写过程中识别的文化代码。</value>
  </data>
  <data name="languageLabel.Text" xml:space="preserve">
    <value>已识别的语言/文化</value>
  </data>
  <data name="identifiedTabLabel.Help" xml:space="preserve">
    <value>在URL重写过程中识别的DNN页面的名称。</value>
  </data>
  <data name="identifiedTabLabel.Text" xml:space="preserve">
    <value>已识别页面</value>
  </data>
  <data name="redirectionResultLabel.Help" xml:space="preserve">
    <value>如果测试的URL将被重定向，则显示URL的重定向位置。</value>
  </data>
  <data name="redirectionResultLabel.Text" xml:space="preserve">
    <value>重定向结果</value>
  </data>
  <data name="redirectionReasonLabel.Help" xml:space="preserve">
    <value>此网址被重定向的原因</value>
  </data>
  <data name="redirectionReasonLabel.Text" xml:space="preserve">
    <value>重定向原因</value>
  </data>
  <data name="operationMessagesLabel.Help" xml:space="preserve">
    <value>在测试URL重写过程中创建的任何调试消息。</value>
  </data>
  <data name="operationMessagesLabel.Text" xml:space="preserve">
    <value>操作信息</value>
  </data>
  <data name="Alias_In_Url.Text" xml:space="preserve">
    <value>Url 别名</value>
  </data>
  <data name="Built_In_Url.Text" xml:space="preserve">
    <value>内置 Url</value>
  </data>
  <data name="Custom_Tab_Alias.Text" xml:space="preserve">
    <value>自定义 Tab 别名</value>
  </data>
  <data name="Deleted_Page.Text" xml:space="preserve">
    <value>已删除页面</value>
  </data>
  <data name="Diacritic_Characters.Text" xml:space="preserve">
    <value>Diacritic 字符</value>
  </data>
  <data name="Disabled_Page.Text" xml:space="preserve">
    <value>已禁用页面</value>
  </data>
  <data name="Error_Event.Text" xml:space="preserve">
    <value>错误事件</value>
  </data>
  <data name="Exception.Text" xml:space="preserve">
    <value>例外</value>
  </data>
  <data name="File_Url.Text" xml:space="preserve">
    <value>文件 Url</value>
  </data>
  <data name="Host_Portal_Used.Text" xml:space="preserve">
    <value>主机入口使用</value>
  </data>
  <data name="Module_Provider_Redirect.Text" xml:space="preserve">
    <value>Module Provider Redirect</value>
  </data>
  <data name="Module_Provider_Rewrite_Redirect.Text" xml:space="preserve">
    <value>模块提供程序重写重定向</value>
  </data>
  <data name="Not_Redirected.Text" xml:space="preserve">
    <value>未重定向</value>
  </data>
  <data name="No_Portal_Alias.Text" xml:space="preserve">
    <value>没有入口别名</value>
  </data>
  <data name="Page_404.Text" xml:space="preserve">
    <value>404 页面</value>
  </data>
  <data name="Requested_404.Text" xml:space="preserve">
    <value>请求404</value>
  </data>
  <data name="Requested_404_In_Url.Text" xml:space="preserve">
    <value>请求404在Url中</value>
  </data>
  <data name="Requested_SplashPage.Text" xml:space="preserve">
    <value>请求启动页</value>
  </data>
  <data name="Secure_Page_Requested.Text" xml:space="preserve">
    <value>请求安全页面</value>
  </data>
  <data name="SiteUrls_Config_Rule.Text" xml:space="preserve">
    <value>SiteUrls配置规则</value>
  </data>
  <data name="Site_Root_Home.Text" xml:space="preserve">
    <value>网站根目录</value>
  </data>
  <data name="Spaces_Replaced.Text" xml:space="preserve">
    <value>空间替换</value>
  </data>
  <data name="Tab_External_Url.Text" xml:space="preserve">
    <value>标签外部网址</value>
  </data>
  <data name="Tab_Permanent_Redirect.Text" xml:space="preserve">
    <value>标签永久重定向</value>
  </data>
  <data name="Unfriendly_Url_Child_Portal.Text" xml:space="preserve">
    <value>不友好的Url儿童入口</value>
  </data>
  <data name="Unfriendly_Url_TabId.Text" xml:space="preserve">
    <value>不友好的Url TabId</value>
  </data>
  <data name="User_Profile_Url.Text" xml:space="preserve">
    <value>用户资料 Url</value>
  </data>
  <data name="Wrong_Portal_Alias.Text" xml:space="preserve">
    <value>错误的门户别名</value>
  </data>
  <data name="Wrong_Portal_Alias_For_Browser_Type.Text" xml:space="preserve">
    <value>浏览器类型错误的门户别名</value>
  </data>
  <data name="Wrong_Portal_Alias_For_Culture.Text" xml:space="preserve">
    <value>文化错误的门户别名</value>
  </data>
  <data name="Wrong_Portal_Alias_For_Culture_And_Browser.Text" xml:space="preserve">
    <value>文化和浏览器错误的门户别名</value>
  </data>
  <data name="Wrong_Sub_Domain.Text" xml:space="preserve">
    <value>错误的子域名</value>
  </data>
  <data name="SitemapSettings.Text" xml:space="preserve">
    <value>一般站点地图设置</value>
  </data>
  <data name="SitemapProviders.Text" xml:space="preserve">
    <value>站点地图提供程序</value>
  </data>
  <data name="SiteSubmission.Text" xml:space="preserve">
    <value>站点地图提交</value>
  </data>
  <data name="sitemapUrlLabel.Help" xml:space="preserve">
    <value>将网站地图提交给Google，以便更好地进行搜索优化。点击提交获取Google Search Console帐号，然后使用)下方的验证选项验证您的网站所有权(。验证完成后，您可以在Google Sitemaps标签上选择Add General Web Sitemap选项并粘贴显示的网站地图URL。</value>
  </data>
  <data name="sitemapUrlLabel.Text" xml:space="preserve">
    <value>站点地图 URL</value>
  </data>
  <data name="lblCache.Help" xml:space="preserve">
    <value>如果您想要缓存站点地图，请启用此选项，以免在每次请求时生成该站点。这对于大型网站来说是特别必要的。如果您的网站拥有超过50.000个网址，则Sitemap将缓存，默认值为1天。将此值设置为0可禁用缓存。</value>
  </data>
  <data name="lblCache.Text" xml:space="preserve">
    <value>缓存网站地图的日子</value>
  </data>
  <data name="lnkResetCache.Text" xml:space="preserve">
    <value>清理缓存</value>
  </data>
  <data name="lblExcludePriority.Help" xml:space="preserve">
    <value>此选项可用于从Sitemap中删除某些页面。例如，您可以为页面设置-1的优先级，并在此处输入-1以使页面不会包含在生成的Sitemap中。</value>
  </data>
  <data name="lblExcludePriority.Text" xml:space="preserve">
    <value>排除优先级低于。的网址</value>
  </data>
  <data name="lblMinPagePriority.Help" xml:space="preserve">
    <value>当使用"基于页面级别的优先级"时，页面的最低优先级可用于设置将在低级别页面上使用的最低优先级</value>
  </data>
  <data name="lblMinPagePriority.Text" xml:space="preserve">
    <value>页面的最低优先级</value>
  </data>
  <data name="lblIncludeHidden.Help" xml:space="preserve">
    <value>当检查到的隐藏网页(在菜单)中不可见时，也会包含在Sitemap中。默认不包括隐藏页面。</value>
  </data>
  <data name="lblIncludeHidden.Text" xml:space="preserve">
    <value>包括隐藏页面</value>
  </data>
  <data name="lblLevelPriority.Help" xml:space="preserve">
    <value>选中后，每个页面的优先级将根据页面的层次结构级别进行计算。顶级页面的值为1，第二级别为0.9，第三级别为0.8，...此设置不会更改存储在实际页面中的值，但会在需要时使用计算值。</value>
  </data>
  <data name="lblLevelPriority.Text" xml:space="preserve">
    <value>使用基于页面级别的优先级</value>
  </data>
  <data name="1Day.Text" xml:space="preserve">
    <value>1 天</value>
  </data>
  <data name="2Days.Text" xml:space="preserve">
    <value>2 天</value>
  </data>
  <data name="3Days.Text" xml:space="preserve">
    <value>3 天</value>
  </data>
  <data name="4Days.Text" xml:space="preserve">
    <value>4 天</value>
  </data>
  <data name="5Days.Text" xml:space="preserve">
    <value>5 天</value>
  </data>
  <data name="6Days.Text" xml:space="preserve">
    <value>6 天</value>
  </data>
  <data name="7Days.Text" xml:space="preserve">
    <value>7 天</value>
  </data>
  <data name="DisableCaching.Text" xml:space="preserve">
    <value>禁用缓存</value>
  </data>
  <data name="enableSitemapProvider.Help" xml:space="preserve">
    <value>启用S​​itemap提供程序</value>
  </data>
  <data name="enableSitemapProvider.Text" xml:space="preserve">
    <value>启用S​​itemap提供程序</value>
  </data>
  <data name="overridePriority.Help" xml:space="preserve">
    <value>覆盖优先级</value>
  </data>
  <data name="overridePriority.Text" xml:space="preserve">
    <value>覆盖优先级</value>
  </data>
  <data name="Name.Header" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="Enabled.Header" xml:space="preserve">
    <value>已启用</value>
  </data>
  <data name="Priority.Header" xml:space="preserve">
    <value>优先级</value>
  </data>
  <data name="lblSearchEngine.Help" xml:space="preserve">
    <value>将您的网站提交给选定的搜索引擎进行索引。</value>
  </data>
  <data name="lblSearchEngine.Text" xml:space="preserve">
    <value>搜索引擎</value>
  </data>
  <data name="lblVerification.Help" xml:space="preserve">
    <value>在注册Google Search Console时，您需要验证您的网站所有权。从Google Verification屏幕上选择"上传HTML文件"方法。输入显示的文件名称(即。 google53c0cef435b2b81e.html )放入验证文本框中，然后点击创建。返回Google并选择验证按钮。</value>
  </data>
  <data name="lblVerification.Text" xml:space="preserve">
    <value>验证</value>
  </data>
  <data name="Submit.Text" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="Create.Text" xml:space="preserve">
    <value>创建</value>
  </data>
  <data name="VerificationValidity.ErrorMessage" xml:space="preserve">
    <value>有效的文件名必须具有扩展名.html (即。 google53c0cef435b2b81e.html )</value>
  </data>
  <data name="NoExtensionUrlProviders.Text" xml:space="preserve">
    <value>找不到扩展程序网址提供程</value>
  </data>
</root>
