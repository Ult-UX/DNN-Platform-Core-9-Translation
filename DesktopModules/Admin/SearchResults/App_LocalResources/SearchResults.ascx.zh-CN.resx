<?xml version="1.0" encoding="UTF-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element msdata:IsDataSet="true" name="root">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
                <xsd:element minOccurs="0" msdata:Ordinal="2" name="comment" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute msdata:Ordinal="1" name="name" type="xsd:string" use="required"/>
              <xsd:attribute msdata:Ordinal="3" name="type" type="xsd:string"/>
              <xsd:attribute msdata:Ordinal="4" name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element minOccurs="0" msdata:Ordinal="1" name="value" type="xsd:string"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Advanced.Text" xml:space="preserve">
    <value>高级</value>
  </data>
  <data name="Date.Text" xml:space="preserve">
    <value>日期</value>
  </data>
  <data name="lblAdvancedDates.Help" xml:space="preserve">
    <value>限制在指定时间内修改的搜索结果。</value>
  </data>
  <data name="lblAdvancedDates.Text" xml:space="preserve">
    <value>上次修改时间:</value>
  </data>
  <data name="lblAdvancedScope.Help" xml:space="preserve">
    <value>限制指定来源的搜索结果。</value>
  </data>
  <data name="lblAdvancedScope.Text" xml:space="preserve">
    <value>过滤器:</value>
  </data>
  <data name="lblAdvancedTags.Help" xml:space="preserve">
    <value>限制搜索结果与指定的标签。</value>
  </data>
  <data name="lblAdvancedTags.Text" xml:space="preserve">
    <value>按标签过滤:</value>
  </data>
  <data name="NoResults.Text" xml:space="preserve">
    <value>未找到结果。</value>
  </data>
  <data name="optionAll.Text" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="optionDay.Text" xml:space="preserve">
    <value>1天</value>
  </data>
  <data name="optionMonth.Text" xml:space="preserve">
    <value>30天</value>
  </data>
  <data name="optionQuarter.Text" xml:space="preserve">
    <value>90天</value>
  </data>
  <data name="optionWeek.Text" xml:space="preserve">
    <value>7天</value>
  </data>
  <data name="optionYear.Text" xml:space="preserve">
    <value>1年</value>
  </data>
  <data name="Relevance.Text" xml:space="preserve">
    <value>关联</value>
  </data>
  <data name="ResultPerPage.Text" xml:space="preserve">
    <value>每页结果:</value>
  </data>
  <data name="Source.Text" xml:space="preserve">
    <value>源:</value>
  </data>
  <data name="Tags.Text" xml:space="preserve">
    <value>标签:</value>
  </data>
  <data name="btnClear.Text" xml:space="preserve">
    <value>清除高级</value>
  </data>
  <data name="btnSearch.Text" xml:space="preserve">
    <value>搜索</value>
  </data>
  <data name="lblAdvancedExactSearch.Help" xml:space="preserve">
    <value>搜索结果必须与关键字完全匹配。</value>
  </data>
  <data name="lblAdvancedExactSearch.Text" xml:space="preserve">
    <value>精确搜索:</value>
  </data>
  <data name="linkAdvancedTip.Text" xml:space="preserve">
    <value>先进的技巧</value>
  </data>
  <data name="AdvancedSearchHint.Text" xml:space="preserve">
    <value>&lt;table class =“dnnSearchResult -hint-tbl dnnTableDisplay”&gt;

                
&lt;tr&gt;
                    &lt;th style =“width：150px”&gt;&lt;span&gt;类型&lt;span&gt;
                     &lt;th&gt;
                    &lt;th style =“width：250px”&gt;&lt;span&gt;示例&lt;span&gt;
                     &lt;th&gt;
                    &lt;th&gt;&lt;span&gt;备注&lt;span&gt;
                     &lt;th&gt;
&lt;tr&gt;
         

                &lt;tr&gt;
                    &lt;td&gt;模糊&lt;td&gt;
                    &lt;td&gt;水壶&lt;b&gt;〜&lt;b&gt;&lt;/td&gt;
                    &lt;td&gt;包含接近单词&lt;i&gt;壶&lt;i&gt;的词，如&lt;i&gt;牛&lt;i&gt;&lt;/td&gt;
                 &lt;tr&gt;

                &lt;tr&gt;
                    &lt;td&gt;狂野&lt;TD&gt;
                    &lt;td&gt;猫*&lt;/td&gt;
                    &lt;td&gt;包含与&lt;i&gt;猫&lt;i&gt;开始的术语，诸如&lt;i&gt;类别&lt;i&gt;和extact术语&lt;i&gt;猫&lt;i&gt;本身&lt;td&gt;
                 &lt;tr&gt;

                &lt;tr&gt;
                    &lt;td&gt;精确单一&lt;td&gt;
                    &lt;td&gt;橙色&lt;td&gt;
                    &lt;td&gt;包含术语&lt;i&gt;橙色&lt;i&gt;&lt;/td&gt;
                 &lt;tr&gt;

                &lt;tr&gt;
                    &lt;td&gt;精确短语&lt;TD&gt;
                    &lt;td&gt;“dnn很棒”&lt;td&gt;
                    &lt;td&gt;包含确切的阶段&lt;i&gt;dnn令人敬畏&lt;i&gt;&lt;/td&gt;
                 &lt;tr&gt;

                &lt;tr&gt;
                    &lt;td&gt;或&lt;td&gt;
                    &lt;td&gt;橙色自行车&lt;td&gt;
                    &lt;td&gt;包含术语&lt;i&gt;橙色&lt;i&gt;或&lt;i&gt;脚踏车&lt;i&gt;或两者。 &lt;b&gt;&lt;i&gt;或&lt;i&gt;（如果使用）必须大写&lt;b&gt;&lt;/td&gt;
                 &lt;tr&gt;

                &lt;tr&gt;
                    &lt;td&gt;&lt;/td&gt;
                    &lt;td&gt;橙色&lt;b&gt;或&lt;b&gt;脚踏车&lt;td&gt;
                    &lt;td&gt;&lt;/td&gt;
                 &lt;tr&gt;

                &lt;tr&gt;
                    &lt;td&gt;和&lt;TD&gt;
                    &lt;td&gt;橙色&lt;b&gt;AND&lt;/b&gt;脚踏车&lt;td&gt;
                    &lt;td&gt;同时包含&lt;i&gt;橙色&lt;i&gt;和&lt;i&gt;脚踏车&lt;i&gt;。 &lt;b&gt;&lt;i&gt;和&lt;i&gt;必须大写&lt;b&gt;&lt;/TD&gt;&lt;/td&gt;
                 &lt;tr&gt;

                &lt;tr&gt;
                    &lt;td&gt;组合&lt;td&gt;
                    &lt;td&gt;（敏捷&lt;b&gt;或&lt;b&gt;极端）&lt;b&gt;AND&lt;/b&gt;方法学&lt;TD&gt;
                    &lt;td&gt;包含&lt;i&gt;方法&lt;i&gt;且必须包含&lt;i&gt;敏捷&lt;i&gt;和/或&lt;i&gt;极端&lt;i&gt;
                 &lt;tr&gt;
             &lt;table&gt;</value>
  </data>
  <data name="LastModified.Text" xml:space="preserve">
    <value>更新:</value>
  </data>
  <data name="AddTag.Text" xml:space="preserve">
    <value>添加标签</value>
  </data>
  <data name="AllFeaturesSelected.Text" xml:space="preserve">
    <value>所有</value>
  </data>
  <data name="Author.Text" xml:space="preserve">
    <value>作者:</value>
  </data>
  <data name="Comments.Text" xml:space="preserve">
    <value>注释:</value>
  </data>
  <data name="Likes.Text" xml:space="preserve">
    <value>喜欢:</value>
  </data>
  <data name="Views.Text" xml:space="preserve">
    <value>浏览次数:</value>
  </data>
  <data name="CurrentPageIndex.Text" xml:space="preserve">
    <value>页:</value>
  </data>
  <data name="ResultsCount.Text" xml:space="preserve">
    <value>关于{0}结果</value>
  </data>
  <data name="DefaultText.Text" xml:space="preserve">
    <value>输入搜索字词</value>
  </data>
</root>
